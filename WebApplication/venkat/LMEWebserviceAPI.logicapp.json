{
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "$connections": {
            "defaultValue": {},
            "type": "Object"
        }
    },
    "triggers": {
        "manual": {
            "type": "Request",
            "kind": "Http",
            "inputs": {}
        }
    },
    "actions": {
        "CSVTOJSON": {
            "runAfter": {
                "Create_CSV_table": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "GetCSvData",
                        "type": "string",
                        "value": "@body('Create_CSV_table')"
                    }
                ]
            }
        },
        "Compose": {
            "runAfter": {
                "Initialize_variable_4": [
                    "Succeeded"
                ]
            },
            "type": "Compose",
            "inputs": "@json(variables('readresponse'))"
        },
        "Create_CSV_table": {
            "runAfter": {
                "GetPricesfromSql": [
                    "Succeeded"
                ]
            },
            "type": "Table",
            "inputs": {
                "columns": [
                    {
                        "header": "aluminium",
                        "value": "@item()?['ah_ofs_3m_bid_usd']"
                    },
                    {
                        "header": "copper",
                        "value": "@item()?['ca_ofs_3m_bid_usd']"
                    },
                    {
                        "header": "date",
                        "value": "@item()?['date']"
                    },
                    {
                        "header": "nickel",
                        "value": "@item()?['ni_ofs_3m_bid_usd']"
                    }
                ],
                "format": "CSV",
                "from": "@body('GetPricesfromSql')?['resultsets']?['Table1']"
            }
        },
        "Create_HTML_Table_for_Email": {
            "runAfter": {
                "Read_Copper": [
                    "Succeeded"
                ]
            },
            "type": "Compose",
            "inputs": "<style>\n#notification table,table th,table td {border: 2px solid #eeeeee}\n</style>\n<div style=\"color:#0078dc;font-family:Helvetica;font-size:14\">\n<B>MX Hedging Monitor as of @{formatDateTime(utcNow(),'dd.MM.yyyy')}\n</div>\n<BR>\n<div id=\"notification\">\n<table>\n<tr style=\"font-weight:bold;color:#0078dc\">\n<td>Contract</td><td>Hedging State</td><td>3M BID (US$/Tonne)</td><td>Price Delta (US$/Tonne )</td><td>Action</td>\n</tr>\n<tr>\n<td style=\"font-weight:bold\">AH</td><td>@{variables('ReadaluminiumCurrent_state')}</td><td style=\"text-align: right;\">@{variables('ah_ofs_3m_bid_usd')}</td><td style=\"text-align: right;\">@{variables('Readaluminiumprice_change')}</td><td>@{variables('Readaluminiumaction')}</td>\n</tr>\n<tr>\n<td style=\"font-weight:bold\">CA</td><td>@{variables('ReadCOCS')}</td><td style=\"text-align: right;\">@{variables('ca_ofs_3m_bid_usd')}</td><td style=\"text-align: right;\">@{variables('ReadCOPrices')}</td><td>@{variables('ReadCOAction')}</td>\n</tr>\n<tr>\n<td style=\"font-weight:bold\">NI</td><td>@{variables('ReadNICS')}</td><td style=\"text-align: right;\">@{variables('ni_ofs_3m_bid_usd')}</td><td style=\"text-align: right;\">@{variables('ReadNIPrice')}</td><td>@{variables('ReadNIAction')}</td>\n</tr>\n</table>\n<a href=\"http://alfred-hedging-monitor.azurewebsites.net/\" style=\"color:00a0f5\">\n<b>Live Price Charts</b>\n</a>\n</div>\n<BR>"
        },
        "Create_Object_of_JSON": {
            "runAfter": {
                "Compose": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "SaveInObjectValue",
                        "type": "object",
                        "value": "@outputs('Compose')"
                    }
                ]
            }
        },
        "Execute_a_SQL_query_to_fetch_current_price": {
            "runAfter": {
                "Read_NI_Price": [
                    "Succeeded"
                ]
            },
            "type": "ApiConnection",
            "inputs": {
                "body": {
                    "query": "select top 1 *  from hedgingHist order by [date] desc"
                },
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['sql']['connectionId']"
                    }
                },
                "method": "post",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/query/sql"
            }
        },
        "GetPricesFromDB": {
            "runAfter": {},
            "type": "ApiConnection",
            "inputs": {
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['sql']['connectionId']"
                    }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[hedgingHist]'))}/items"
            }
        },
        "GetPricesfromSql": {
            "runAfter": {
                "GetPricesFromDB": [
                    "Succeeded"
                ]
            },
            "type": "ApiConnection",
            "inputs": {
                "body": {
                    "query": "select * from hedgingHist"
                },
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['sql']['connectionId']"
                    }
                },
                "method": "post",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/query/sql"
            }
        },
        "Get_secret_Key": {
            "runAfter": {
                "Initialize_variable_2": [
                    "Succeeded"
                ]
            },
            "type": "ApiConnection",
            "inputs": {
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                    }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('alfred-hedging-endpoint-key')}/value"
            }
        },
        "Get_secret_URL": {
            "runAfter": {
                "CSVTOJSON": [
                    "Succeeded"
                ]
            },
            "type": "ApiConnection",
            "inputs": {
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                    }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('alfred-hedging-endpoint-url')}/value"
            }
        },
        "Get_secret_param": {
            "runAfter": {
                "Initialize_variable": [
                    "Succeeded"
                ]
            },
            "type": "ApiConnection",
            "inputs": {
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                    }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('alfred-hedging-model-parameters-dev')}/value"
            }
        },
        "HTTP_DataCall": {
            "runAfter": {
                "Get_secret_Key": [
                    "Succeeded"
                ]
            },
            "type": "Http",
            "inputs": {
                "body": {
                    "data": {
                        "lme": "@variables('GetCSvData')",
                        "parameters": "@variables('VarParam')"
                    }
                },
                "headers": {
                    "Authorization": "Bearer @{body('Get_secret_Key')?['value']}",
                    "Content-Type": "application/json"
                },
                "method": "POST",
                "uri": "@variables('VarUrl')"
            }
        },
        "Initialize_variable": {
            "runAfter": {
                "Get_secret_URL": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "VarUrl",
                        "type": "string",
                        "value": "@body('Get_secret_URL')?['value']"
                    }
                ]
            }
        },
        "Initialize_variable_2": {
            "runAfter": {
                "Get_secret_param": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "VarParam",
                        "type": "string",
                        "value": "@body('Get_secret_param')?['value']"
                    }
                ]
            }
        },
        "Initialize_variable_4": {
            "runAfter": {
                "HTTP_DataCall": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "readresponse",
                        "type": "string",
                        "value": "@{body('HTTP_DataCall')?['notifications']}"
                    }
                ]
            }
        },
        "Read_AL_Action": {
            "runAfter": {
                "Read_AL_CS": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "Readaluminiumaction",
                        "type": "string",
                        "value": "@{variables('readaluminium')['action']}"
                    }
                ]
            }
        },
        "Read_AL_CS": {
            "runAfter": {
                "Read_Al": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ReadaluminiumCurrent_state",
                        "type": "string",
                        "value": "@{variables('readaluminium')['current_state']}"
                    }
                ]
            }
        },
        "Read_AL_Price": {
            "runAfter": {
                "Read_AL_Action": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "Readaluminiumprice_change",
                        "type": "string",
                        "value": "@{variables('readaluminium')['price_change']}"
                    }
                ]
            }
        },
        "Read_Al": {
            "runAfter": {
                "Create_Object_of_JSON": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "readaluminium",
                        "type": "object",
                        "value": "@variables('SaveInObjectValue')['aluminium']"
                    }
                ]
            }
        },
        "Read_All_Prices": {
            "runAfter": {
                "Execute_a_SQL_query_to_fetch_current_price": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "AllPrices",
                        "type": "string",
                        "value": "@{body('Execute_a_SQL_query_to_fetch_current_price')?['resultsets']}"
                    }
                ]
            }
        },
        "Read_Aluminium": {
            "runAfter": {
                "Read_Nickel": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ah_ofs_3m_bid_usd",
                        "type": "string",
                        "value": "@{body('Execute_a_SQL_query_to_fetch_current_price')?['resultsets']['Table1'][0]['ah_ofs_3m_bid_usd']}"
                    }
                ]
            }
        },
        "Read_CO": {
            "runAfter": {
                "Read_AL_Price": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ReadCopper",
                        "type": "object",
                        "value": "@variables('SaveInObjectValue')['copper']"
                    }
                ]
            }
        },
        "Read_CO_Action": {
            "runAfter": {
                "Read_CO_CS": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ReadCOAction",
                        "type": "string",
                        "value": "@{variables('ReadCopper')['action']}"
                    }
                ]
            }
        },
        "Read_CO_CS": {
            "runAfter": {
                "Read_CO": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ReadCOCS",
                        "type": "string",
                        "value": "@{variables('ReadCopper')['current_state']}"
                    }
                ]
            }
        },
        "Read_CO_Prices": {
            "runAfter": {
                "Read_CO_Action": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ReadCOPrices",
                        "type": "string",
                        "value": "@{variables('ReadCopper')['price_change']}"
                    }
                ]
            }
        },
        "Read_Copper": {
            "runAfter": {
                "Read_Aluminium": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ca_ofs_3m_bid_usd",
                        "type": "string",
                        "value": "@{body('Execute_a_SQL_query_to_fetch_current_price')?['resultsets']['Table1'][0]['ca_ofs_3m_bid_usd']}"
                    }
                ]
            }
        },
        "Read_NI": {
            "runAfter": {
                "Read_CO_Prices": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ReadNickel",
                        "type": "object",
                        "value": "@variables('SaveInObjectValue')['nickel']"
                    }
                ]
            }
        },
        "Read_NI_Action": {
            "runAfter": {
                "Read_NI_CS": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ReadNIAction",
                        "type": "string",
                        "value": "@{variables('ReadNickel')['action']}"
                    }
                ]
            }
        },
        "Read_NI_CS": {
            "runAfter": {
                "Read_NI": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ReadNICS",
                        "type": "string",
                        "value": "@{variables('ReadNickel')['current_state']}"
                    }
                ]
            }
        },
        "Read_NI_Price": {
            "runAfter": {
                "Read_NI_Action": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ReadNIPrice",
                        "type": "string",
                        "value": "@{variables('ReadNickel')['price_change']}"
                    }
                ]
            }
        },
        "Read_Nickel": {
            "runAfter": {
                "Read_All_Prices": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "ni_ofs_3m_bid_usd",
                        "type": "string",
                        "value": "@{body('Execute_a_SQL_query_to_fetch_current_price')?['resultsets']['Table1'][0]['ni_ofs_3m_bid_usd']}"
                    }
                ]
            }
        },
        "Response": {
            "runAfter": {
                "Send_an_email_(V2)_2": [
                    "Succeeded"
                ]
            },
            "type": "Response",
            "kind": "Http",
            "inputs": {
                "body": "This was run successfully",
                "statusCode": 200
            }
        },
        "Send_an_email_(V2)_2": {
            "runAfter": {
                "Create_HTML_Table_for_Email": [
                    "Succeeded"
                ]
            },
            "type": "ApiConnection",
            "inputs": {
                "body": {
                    "Bcc": "satish.dalvi@thyssenkrupp-materials.com;christoph.nueckel@thyssenkrupp-materials.com;thorsten.soerje@thyssenkrupp-materials.com;markus.tautschnig@thyssenkrupp-materials.com;sebastian.klemm@thyssenkrupp-materials.com;paulina.pawlowski@thyssenkrupp-materials.com;daniel.wodera@thyssenkrupp-materials.com;frank.thelen@thyssenkrupp-materials.com;",
                    "Body": "<p>@{outputs('Create_HTML_Table_for_Email')}</p>",
                    "From": "hedging.bamx@thyssenkrupp-materials.com",
                    "Subject": "MX Hedging Monitor",
                    "To": "hedging.bamx@thyssenkrupp-materials.com"
                },
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['office365']['connectionId']"
                    }
                },
                "method": "post",
                "path": "/v2/Mail"
            }
        }
    },
    "outputs": {}
}